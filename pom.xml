<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.6.RELEASE</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.maurosalani.project.attsd</groupId>
  <artifactId>ATTSDProject</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>ATTSDProject</name>
  <description>Social network for video games</description>

  <properties>
    <java.version>1.11</java.version>

    <skip.unit-tests>false</skip.unit-tests>
    <skip.integration-tests>true</skip.integration-tests>
    <attsd.MYSQL_DATABASE>attsd_database</attsd.MYSQL_DATABASE>
    <attsd.MYSQL_USER>springuser</attsd.MYSQL_USER>
    <attsd.MYSQL_PASSWORD>springuser</attsd.MYSQL_PASSWORD>

    <!-- For SonarQube -->
    <sonar.coverage.jacoco.xmlReportPaths>
      ${project.reporting.outputDirectory}/jacoco/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <!-- Also collects integration tests -->
    <sonar.junit.reportPaths>
      ${project.build.directory}/surefire-reports,
      ${project.build.directory}/failsafe-reports
    </sonar.junit.reportPaths>
    <!-- Also scans HTML files -->
    <sonar.sources>
      pom.xml,
      ${project.build.sourceDirectory},
      ${basedir}/src/main/resources
    </sonar.sources>
    <!-- Exclude non covered files -->
    <sonar.coverage.exclusions>
      **/*Application.*,
      **/model/*,
      **/dto/*,
      **/exception/*
    </sonar.coverage.exclusions>
    <sonar.issue.ignore.multicriteria>e1,e2,e3,e4</sonar.issue.ignore.multicriteria>
    <!-- "Tests should include assertions" disabled on some classes like 
      *ApplicationTests which just checks that the Spring application can start, 
      without any assertion -->
    <sonar.issue.ignore.multicriteria.e1.ruleKey>
      squid:S2699
    </sonar.issue.ignore.multicriteria.e1.ruleKey>
    <sonar.issue.ignore.multicriteria.e1.resourceKey>
      **/*ApplicationTests.java
    </sonar.issue.ignore.multicriteria.e1.resourceKey>
    <!-- "Cognitive Complexity of methods should not be too high", disabled 
      on model classes that contains eclipse auto generated equals method -->
    <sonar.issue.ignore.multicriteria.e2.ruleKey>
      squid:S3776
    </sonar.issue.ignore.multicriteria.e2.ruleKey>
    <sonar.issue.ignore.multicriteria.e2.resourceKey>
      **/model/*.java
    </sonar.issue.ignore.multicriteria.e2.resourceKey>
    <!-- "Return values from functions without side effects should not be 
      ignored", disabled on UserService class in methods that throw an Exception 
      that is caught by Spring -->
    <sonar.issue.ignore.multicriteria.e3.ruleKey>
      squid:S2201
    </sonar.issue.ignore.multicriteria.e3.ruleKey>
    <sonar.issue.ignore.multicriteria.e3.resourceKey>
      **/UserService.java
    </sonar.issue.ignore.multicriteria.e3.resourceKey>
    <!-- "Using command line arguments is security-sensitive", disabled on 
      AttsdProjectApplication class because we do not use any options (just the 
      profile e2e uses 'spring.application.admin.enabled' and 'server.port' ) -->
    <sonar.issue.ignore.multicriteria.e4.ruleKey>
      squid:S4823
    </sonar.issue.ignore.multicriteria.e4.ruleKey>
    <sonar.issue.ignore.multicriteria.e4.resourceKey>
      **/AttsdProjectApplication.java
    </sonar.issue.ignore.multicriteria.e4.resourceKey>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>spring-mock-mvc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>htmlunit-driver</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-support</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>3.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>4.3.1</version>
    </dependency>
    <dependency>
      <groupId>com.maurosalani</groupId>
      <artifactId>PushNotification</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>1.1</version>
    </dependency>
  </dependencies>

  <!-- PLUGINS -->
  <build>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
                <source>src/e2e/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skip.unit-tests}</skipTests>
          <excludes>
            <exclude>**/AttsdProjectApplicationTests.java</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>

    <!-- PLUGIN MANAGEMENT -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <executions>
            <execution>
              <configuration>
                <skipTests>${skip.integration-tests}</skipTests>
                <includes>
                  <include>**/*IT.java</include>
                  <include>**/*AttsdProjectApplicationTests.java</include>
                </includes>
              </configuration>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.3</version>
          <configuration>
            <excludes>
              <exclude>**/*Application.*</exclude>
              <exclude>**/model/*</exclude>
              <exclude>**/dto/*</exclude>
              <exclude>**/exception/*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <rules>
                  <rule>
                    <element>CLASS</element>
                    <limits>
                      <limit>
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>1.0</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>1.4.8</version>
          <configuration>
            <targetClasses>
              <param>com.maurosalani.project.attsd.*</param>
            </targetClasses>
            <excludedClasses>
              <param>com.maurosalani.project.attsd.dto.*</param>
              <param>com.maurosalani.project.attsd.model.*</param>
              <param>com.maurosalani.project.attsd.exception.*</param>
              <param>com.maurosalani.project.attsd.AttsdProjectApplication</param>
              <param>com.maurosalani.project.attsd.web_config.*</param>
            </excludedClasses>
            <excludedMethods>
              <excludedMethod>
                <!-- "not equals to greater than" mutation is executed in 
                  this instruction: if (!userLogged.getId().equals(id)) and we don't understand 
                  the how to cope with that -->
                checkRequestCorrectness
              </excludedMethod>
              <excludedMethod>
                <!-- "incremented integer local variable a++ (and also decrement)" 
                  mutations are executed in this instruction: PageRequest.of(0, count) and 
                  we don't understand the how to cope with that -->
                getLatestReleasesGames
              </excludedMethod>
              <excludedMethod>
                <!-- "equal to less or equal" mutation is executed in this 
                  instruction: StringUtils.isWhitespace(password) and we don't understand the 
                  how to cope with that -->
                checkPasswordIsCorrect
              </excludedMethod>
              <excludedMethod>
                <!-- "equal to less or equal" mutation is executed in this 
                  instruction: Optional.isPresent() and we don't understand the how to cope 
                  with that -->
                checkIfUsernameAlreadyExists
              </excludedMethod>
            </excludedMethods>
            <targetTests>
              <param>com.maurosalani.project.attsd.*</param>
            </targetTests>
            <excludedTestClasses>
              <param>com.maurosalani.project.attsd.AttsdProjectApplicationTests</param>
              <param>com.maurosalani.project.attsd.*IT*</param>
              <param>com.maurosalani.project.attsd.*E2E*</param>
            </excludedTestClasses>
            <mutators>
              <mutator>ALL</mutator>
            </mutators>
            <mutationThreshold>100</mutationThreshold>
          </configuration>
        </plugin>

        <plugin>
          <!-- coveralls:report is called explicitly from the .travis.yml 
            script -->
          <groupId>org.eluder.coveralls</groupId>
          <artifactId>coveralls-maven-plugin</artifactId>
          <version>4.3.0</version>
        </plugin>

        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.6.0.1398</version>
        </plugin>

        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.30.0</version>
          <extensions>true</extensions>
          <configuration>
            <images>
              <image>
                <alias>database</alias>
                <name>mysql:8.0.16</name>
                <run>
                  <wait>
                    <log>mysqld: ready for connections</log>
                    <time>200000</time>
                  </wait>
                  <env>
                    <MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
                    <MYSQL_DATABASE>${attsd.MYSQL_DATABASE}</MYSQL_DATABASE>
                    <MYSQL_USER>${attsd.MYSQL_USER}</MYSQL_USER>
                    <MYSQL_PASSWORD>${attsd.MYSQL_PASSWORD}</MYSQL_PASSWORD>
                  </env>
                  <ports>
                    <port>3306:3306</port>
                  </ports>
                </run>
              </image>
            </images>
          </configuration>
          <executions>
            <execution>
              <id>docker:start</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>start</goal>
              </goals>
            </execution>
            <execution>
              <id>docker:stop</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- This plugin must be defined after docker plugin, to allow 
            the goals 'docker-maven-plugin:<version>:start' and 'spring-boot-maven-plugin:<version>:start' 
            inside profile e2e to be executed in this order -->
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <mainClass>com.maurosalani.project.attsd.AttsdProjectApplication</mainClass>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!-- PROFILES -->
  <profiles>
    <profile>
      <id>jacoco</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>pit</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>it</id>
      <properties>
        <skip.integration-tests>false</skip.integration-tests>
        <attsd.MYSQL_DATABASE>attsd_database_test</attsd.MYSQL_DATABASE>
        <attsd.MYSQL_USER>springuser_test</attsd.MYSQL_USER>
        <attsd.MYSQL_PASSWORD>springuser_test</attsd.MYSQL_PASSWORD>
      </properties>
      <build>
        <plugins>
          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <!-- Configured in pluginManagement -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>e2e</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <skip.unit-tests>true</skip.unit-tests>
        <skip.integration-tests>false</skip.integration-tests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>reserve-tomcat-port</id>
                <goals>
                  <goal>reserve-network-port</goal>
                </goals>
                <phase>process-resources</phase>
                <configuration>
                  <portNames>
                    <portName>tomcat.http.port</portName>
                  </portNames>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <arguments>
                    <argument>--server.port=${tomcat.http.port}</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <configuration>
                  <excludes>
                    <exclude>**/*IT.java</exclude>
                    <exclude>**/AttsdProjectApplicationTests.java</exclude>
                  </excludes>
                  <includes>
                    <include>**/*E2E.java</include>
                  </includes>
                  <systemPropertyVariables>
                    <server.port>${tomcat.http.port}</server.port>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
